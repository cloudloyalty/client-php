<?php

/*
 * This file has been auto generated by Jane,
 *
 * Do no edit it directly.
 */

namespace CloudLoyalty\Api\Generated\Model;

class SetOrderRequestOrder
{
    /**
     * Идентификатор заказа
     *
     * @var string
     */
    protected $id;

    /**
     * Дата и время создания заказа.
     *
     * Для нового заказа, если не задана, считается равной текущим дате и времени.
     *
     *
     * @var \DateTime
     */
    protected $executedAt;

    /**
     * Код магазина, в котором осуществляется операция
     *
     * @var string
     */
    protected $shopCode;

    /**
     * Полное название магазина, в котором осуществляется операция
     *
     * @var string
     */
    protected $shopName;

    /**
     * Общая сумма заказа.
     *
     * Сумма к оплате клиентом. Если на стороне магазина предусмотрены скидки,
     * указанная сумма должна быть с учетом этих скидок.
     *
     *
     * @var float
     */
    protected $totalAmount;

    /**
     * 
     *
     * @var SetOrderRequestOrderLoyalty
     */
    protected $loyalty;

    /**
     * Промокод
     *
     * @var string
     */
    protected $promocode;

    /**
     * Список позиций заказа
     *
     * @var SetOrderRequestOrderItemsItem[]
     */
    protected $items;

    /**
     * Идентификатор заказа
     *
     * @return string
     */
    public function getId()
    {
        return $this->id;
    }

    /**
     * Идентификатор заказа
     *
     * @param string $id
     *
     * @return self
     */
    public function setId($id)
    {
        $this->id = $id;
        return $this;
    }

    /**
     * Дата и время создания заказа.
     *
     * Для нового заказа, если не задана, считается равной текущим дате и времени.
     *
     *
     * @return \DateTime
     */
    public function getExecutedAt()
    {
        return $this->executedAt;
    }

    /**
     * Дата и время создания заказа.
     *
     * Для нового заказа, если не задана, считается равной текущим дате и времени.
     *
     *
     * @param \DateTime $executedAt
     *
     * @return self
     */
    public function setExecutedAt(\DateTime $executedAt)
    {
        $this->executedAt = $executedAt;
        return $this;
    }

    /**
     * Код магазина, в котором осуществляется операция
     *
     * @return string
     */
    public function getShopCode()
    {
        return $this->shopCode;
    }

    /**
     * Код магазина, в котором осуществляется операция
     *
     * @param string $shopCode
     *
     * @return self
     */
    public function setShopCode($shopCode)
    {
        $this->shopCode = $shopCode;
        return $this;
    }

    /**
     * Полное название магазина, в котором осуществляется операция
     *
     * @return string
     */
    public function getShopName()
    {
        return $this->shopName;
    }

    /**
     * Полное название магазина, в котором осуществляется операция
     *
     * @param string $shopName
     *
     * @return self
     */
    public function setShopName($shopName)
    {
        $this->shopName = $shopName;
        return $this;
    }

    /**
     * Общая сумма заказа.
     *
     * Сумма к оплате клиентом. Если на стороне магазина предусмотрены скидки,
     * указанная сумма должна быть с учетом этих скидок.
     *
     *
     * @return float
     */
    public function getTotalAmount()
    {
        return $this->totalAmount;
    }

    /**
     * Общая сумма заказа.
     *
     * Сумма к оплате клиентом. Если на стороне магазина предусмотрены скидки,
     * указанная сумма должна быть с учетом этих скидок.
     *
     *
     * @param float $totalAmount
     *
     * @return self
     */
    public function setTotalAmount($totalAmount)
    {
        $this->totalAmount = $totalAmount;
        return $this;
    }

    /**
     * 
     *
     * @return SetOrderRequestOrderLoyalty
     */
    public function getLoyalty()
    {
        return $this->loyalty;
    }

    /**
     * 
     *
     * @param SetOrderRequestOrderLoyalty $loyalty
     *
     * @return self
     */
    public function setLoyalty(SetOrderRequestOrderLoyalty $loyalty)
    {
        $this->loyalty = $loyalty;
        return $this;
    }

    /**
     * Промокод
     *
     * @return string
     */
    public function getPromocode()
    {
        return $this->promocode;
    }

    /**
     * Промокод
     *
     * @param string $promocode
     *
     * @return self
     */
    public function setPromocode($promocode)
    {
        $this->promocode = $promocode;
        return $this;
    }

    /**
     * Список позиций заказа
     *
     * @return SetOrderRequestOrderItemsItem[]
     */
    public function getItems()
    {
        return $this->items;
    }

    /**
     * Список позиций заказа
     *
     * @param SetOrderRequestOrderItemsItem[] $items
     *
     * @return self
     */
    public function setItems(array $items)
    {
        $this->items = $items;
        return $this;
    }
}