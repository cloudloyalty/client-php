<?php

/*
 * This file has been auto generated by Jane,
 *
 * Do no edit it directly.
 */

namespace CloudLoyalty\Api\Generated\Model;

class ClientInfoQuery
{
    /**
     * Номер телефона клиента
     *
     * @var string
     */
    protected $phoneNumber;

    /**
     * Адрес электронной почты клиента
     *
     * @var string
     */
    protected $email;

    /**
     * Фамилия
     *
     * @var string
     */
    protected $surname;

    /**
     * Имя
     *
     * @var string
     */
    protected $name;

    /**
     * Отчество
     *
     * @var string
     */
    protected $patronymicName;

    /**
     * Фамилия, имя и отчество одной строкой
     *
     * @var string
     */
    protected $fullName;

    /**
     * Пол.
     *
     * Значения:
     * - 0 — пол неизвестен,
     * - 1 — мужской,
     * - 2 — женский
     *
     *
     * @var int
     */
    protected $gender;

    /**
     * Дата рождения
     *
     * @var \DateTime
     */
    protected $birthdate;

    /**
     * Номер бонусной карты
     *
     * @var string
     */
    protected $card;

    /**
     * Флаг, подписан ли клиент на маркетинговые рассылки по электронной почте
     *
     * @var bool
     */
    protected $isEmailSubscribed;

    /**
     * Флаг, подписан ли клиент на маркетинговые рассылки по SMS или Viber
     *
     * @var bool
     */
    protected $isPhoneSubscribed;

    /**
     * Внешний идентификатор клиента
     *
     * @var string
     */
    protected $externalId;

    /**
     * Дополнительные параметры клиента
     *
     * @var mixed
     */
    protected $extraFields;

    /**
     * Уровень клиента в программе лояльности
     *
     * @var int
     */
    protected $level;

    /**
     * 
     *
     * @var ClientInfoQueryChildrenItem[]
     */
    protected $children;

    /**
     * Номер телефона клиента
     *
     * @return string
     */
    public function getPhoneNumber()
    {
        return $this->phoneNumber;
    }

    /**
     * Номер телефона клиента
     *
     * @param string $phoneNumber
     *
     * @return self
     */
    public function setPhoneNumber($phoneNumber)
    {
        $this->phoneNumber = $phoneNumber;
        return $this;
    }

    /**
     * Адрес электронной почты клиента
     *
     * @return string
     */
    public function getEmail()
    {
        return $this->email;
    }

    /**
     * Адрес электронной почты клиента
     *
     * @param string $email
     *
     * @return self
     */
    public function setEmail($email)
    {
        $this->email = $email;
        return $this;
    }

    /**
     * Фамилия
     *
     * @return string
     */
    public function getSurname()
    {
        return $this->surname;
    }

    /**
     * Фамилия
     *
     * @param string $surname
     *
     * @return self
     */
    public function setSurname($surname)
    {
        $this->surname = $surname;
        return $this;
    }

    /**
     * Имя
     *
     * @return string
     */
    public function getName()
    {
        return $this->name;
    }

    /**
     * Имя
     *
     * @param string $name
     *
     * @return self
     */
    public function setName($name)
    {
        $this->name = $name;
        return $this;
    }

    /**
     * Отчество
     *
     * @return string
     */
    public function getPatronymicName()
    {
        return $this->patronymicName;
    }

    /**
     * Отчество
     *
     * @param string $patronymicName
     *
     * @return self
     */
    public function setPatronymicName($patronymicName)
    {
        $this->patronymicName = $patronymicName;
        return $this;
    }

    /**
     * Фамилия, имя и отчество одной строкой
     *
     * @return string
     */
    public function getFullName()
    {
        return $this->fullName;
    }

    /**
     * Фамилия, имя и отчество одной строкой
     *
     * @param string $fullName
     *
     * @return self
     */
    public function setFullName($fullName)
    {
        $this->fullName = $fullName;
        return $this;
    }

    /**
     * Пол.
     *
     * Значения:
     * - 0 — пол неизвестен,
     * - 1 — мужской,
     * - 2 — женский
     *
     *
     * @return int
     */
    public function getGender()
    {
        return $this->gender;
    }

    /**
     * Пол.
     *
     * Значения:
     * - 0 — пол неизвестен,
     * - 1 — мужской,
     * - 2 — женский
     *
     *
     * @param int $gender
     *
     * @return self
     */
    public function setGender($gender)
    {
        $this->gender = $gender;
        return $this;
    }

    /**
     * Дата рождения
     *
     * @return \DateTime
     */
    public function getBirthdate()
    {
        return $this->birthdate;
    }

    /**
     * Дата рождения
     *
     * @param \DateTime $birthdate
     *
     * @return self
     */
    public function setBirthdate(\DateTime $birthdate)
    {
        $this->birthdate = $birthdate;
        return $this;
    }

    /**
     * Номер бонусной карты
     *
     * @return string
     */
    public function getCard()
    {
        return $this->card;
    }

    /**
     * Номер бонусной карты
     *
     * @param string $card
     *
     * @return self
     */
    public function setCard($card)
    {
        $this->card = $card;
        return $this;
    }

    /**
     * Флаг, подписан ли клиент на маркетинговые рассылки по электронной почте
     *
     * @return bool
     */
    public function getIsEmailSubscribed()
    {
        return $this->isEmailSubscribed;
    }

    /**
     * Флаг, подписан ли клиент на маркетинговые рассылки по электронной почте
     *
     * @param bool $isEmailSubscribed
     *
     * @return self
     */
    public function setIsEmailSubscribed($isEmailSubscribed)
    {
        $this->isEmailSubscribed = $isEmailSubscribed;
        return $this;
    }

    /**
     * Флаг, подписан ли клиент на маркетинговые рассылки по SMS или Viber
     *
     * @return bool
     */
    public function getIsPhoneSubscribed()
    {
        return $this->isPhoneSubscribed;
    }

    /**
     * Флаг, подписан ли клиент на маркетинговые рассылки по SMS или Viber
     *
     * @param bool $isPhoneSubscribed
     *
     * @return self
     */
    public function setIsPhoneSubscribed($isPhoneSubscribed)
    {
        $this->isPhoneSubscribed = $isPhoneSubscribed;
        return $this;
    }

    /**
     * Внешний идентификатор клиента
     *
     * @return string
     */
    public function getExternalId()
    {
        return $this->externalId;
    }

    /**
     * Внешний идентификатор клиента
     *
     * @param string $externalId
     *
     * @return self
     */
    public function setExternalId($externalId)
    {
        $this->externalId = $externalId;
        return $this;
    }

    /**
     * Дополнительные параметры клиента
     *
     * @return mixed
     */
    public function getExtraFields()
    {
        return $this->extraFields;
    }

    /**
     * Дополнительные параметры клиента
     *
     * @param mixed $extraFields
     *
     * @return self
     */
    public function setExtraFields($extraFields)
    {
        $this->extraFields = $extraFields;
        return $this;
    }

    /**
     * Уровень клиента в программе лояльности
     *
     * @return int
     */
    public function getLevel()
    {
        return $this->level;
    }

    /**
     * Уровень клиента в программе лояльности
     *
     * @param int $level
     *
     * @return self
     */
    public function setLevel($level)
    {
        $this->level = $level;
        return $this;
    }

    /**
     * 
     *
     * @return ClientInfoQueryChildrenItem[]
     */
    public function getChildren()
    {
        return $this->children;
    }

    /**
     * 
     *
     * @param ClientInfoQueryChildrenItem[] $children
     *
     * @return self
     */
    public function setChildren(array $children)
    {
        $this->children = $children;
        return $this;
    }
}