<?php

/*
 * This file has been auto generated by Jane,
 *
 * Do no edit it directly.
 */

namespace CloudLoyalty\Api\Generated\Model;

class CalculateProductsRequestItem
{
    /**
     * Произвольный идентификатор строки, сервером не используется
     *
     * @var string
     */
    protected $id;

    /**
     * Данные о товаре/услуге
     *
     * @var Product
     */
    protected $product;

    /**
     * Количество
     *
     * @var float
     */
    protected $qty;

    /**
     * Скидка, уже примененная к товару вне MAXMA.
     * Учитывается при расчете максимальной скидки, может использоваться для полного запрета прочих скидок.
     *
     *
     * @var float
     */
    protected $externalDiscount = 0;

    /**
     * Запрет начисления бонусов за этот товар
     *
     * @var bool
     */
    protected $noCollectBonuses = false;

    /**
     * Запрет применения акций к этому товару
     *
     * @var bool
     */
    protected $noOffer = false;

    /**
     * Величина максимальной скидки для этого товара
     *
     * @var float
     */
    protected $maxDiscount;

    /**
     * Произвольный идентификатор строки, сервером не используется
     *
     * @return string
     */
    public function getId()
    {
        return $this->id;
    }

    /**
     * Произвольный идентификатор строки, сервером не используется
     *
     * @param string $id
     *
     * @return self
     */
    public function setId($id)
    {
        $this->id = $id;
        return $this;
    }

    /**
     * Данные о товаре/услуге
     *
     * @return Product
     */
    public function getProduct()
    {
        return $this->product;
    }

    /**
     * Данные о товаре/услуге
     *
     * @param Product $product
     *
     * @return self
     */
    public function setProduct(Product $product)
    {
        $this->product = $product;
        return $this;
    }

    /**
     * Количество
     *
     * @return float
     */
    public function getQty()
    {
        return $this->qty;
    }

    /**
     * Количество
     *
     * @param float $qty
     *
     * @return self
     */
    public function setQty($qty)
    {
        $this->qty = $qty;
        return $this;
    }

    /**
     * Скидка, уже примененная к товару вне MAXMA.
     * Учитывается при расчете максимальной скидки, может использоваться для полного запрета прочих скидок.
     *
     *
     * @return float
     */
    public function getExternalDiscount()
    {
        return $this->externalDiscount;
    }

    /**
     * Скидка, уже примененная к товару вне MAXMA.
     * Учитывается при расчете максимальной скидки, может использоваться для полного запрета прочих скидок.
     *
     *
     * @param float $externalDiscount
     *
     * @return self
     */
    public function setExternalDiscount($externalDiscount)
    {
        $this->externalDiscount = $externalDiscount;
        return $this;
    }

    /**
     * Запрет начисления бонусов за этот товар
     *
     * @return bool
     */
    public function getNoCollectBonuses()
    {
        return $this->noCollectBonuses;
    }

    /**
     * Запрет начисления бонусов за этот товар
     *
     * @param bool $noCollectBonuses
     *
     * @return self
     */
    public function setNoCollectBonuses($noCollectBonuses)
    {
        $this->noCollectBonuses = $noCollectBonuses;
        return $this;
    }

    /**
     * Запрет применения акций к этому товару
     *
     * @return bool
     */
    public function getNoOffer()
    {
        return $this->noOffer;
    }

    /**
     * Запрет применения акций к этому товару
     *
     * @param bool $noOffer
     *
     * @return self
     */
    public function setNoOffer($noOffer)
    {
        $this->noOffer = $noOffer;
        return $this;
    }

    /**
     * Величина максимальной скидки для этого товара
     *
     * @return float
     */
    public function getMaxDiscount()
    {
        return $this->maxDiscount;
    }

    /**
     * Величина максимальной скидки для этого товара
     *
     * @param float $maxDiscount
     *
     * @return self
     */
    public function setMaxDiscount($maxDiscount)
    {
        $this->maxDiscount = $maxDiscount;
        return $this;
    }
}