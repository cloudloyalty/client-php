<?php

/*
 * This file has been auto generated by Jane,
 *
 * Do no edit it directly.
 */

namespace CloudLoyalty\Api\Generated\Model;

class V2CalculatePurchaseRequest
{
    /**
     * ID ранее созданного заказа, для которого делается расчет.
     * Если вы указываете значение в этом поле, бонусы, зарезервированные ранее за заказом, будут также учитываться в расчете.
     * Метод не возвращает ошибку, если заказ с переданным идентификатором не найден или уже обработан.
     *
     *
     * @var string
     */
    protected $orderId;

    /**
     * Данные чека или заказа для расчета.
     * Если клиент не задан для чека, продажа считается анонимной, в этом случае бонусная программа не работает.
     *
     *
     * @var CalculationQuery
     */
    protected $calculationQuery;

    /**
     * ID ранее созданного заказа, для которого делается расчет.
     * Если вы указываете значение в этом поле, бонусы, зарезервированные ранее за заказом, будут также учитываться в расчете.
     * Метод не возвращает ошибку, если заказ с переданным идентификатором не найден или уже обработан.
     *
     *
     * @return string
     */
    public function getOrderId()
    {
        return $this->orderId;
    }

    /**
     * ID ранее созданного заказа, для которого делается расчет.
     * Если вы указываете значение в этом поле, бонусы, зарезервированные ранее за заказом, будут также учитываться в расчете.
     * Метод не возвращает ошибку, если заказ с переданным идентификатором не найден или уже обработан.
     *
     *
     * @param string $orderId
     *
     * @return self
     */
    public function setOrderId($orderId)
    {
        $this->orderId = $orderId;
        return $this;
    }

    /**
     * Данные чека или заказа для расчета.
     * Если клиент не задан для чека, продажа считается анонимной, в этом случае бонусная программа не работает.
     *
     *
     * @return CalculationQuery
     */
    public function getCalculationQuery()
    {
        return $this->calculationQuery;
    }

    /**
     * Данные чека или заказа для расчета.
     * Если клиент не задан для чека, продажа считается анонимной, в этом случае бонусная программа не работает.
     *
     *
     * @param CalculationQuery $calculationQuery
     *
     * @return self
     */
    public function setCalculationQuery(CalculationQuery $calculationQuery)
    {
        $this->calculationQuery = $calculationQuery;
        return $this;
    }
}