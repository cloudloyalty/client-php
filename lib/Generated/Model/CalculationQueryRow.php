<?php

/*
 * This file has been auto generated by Jane,
 *
 * Do no edit it directly.
 */

namespace CloudLoyalty\Api\Generated\Model;

class CalculationQueryRow
{
    /**
     * Произвольный идентификатор строки, сервером не используется
     *
     * @var string
     */
    protected $id;

    /**
     * Данные о товаре/услуге
     *
     * @var CalculationQueryRowProduct
     */
    protected $product;

    /**
     * Количество
     *
     * @var float
     */
    protected $qty;

    /**
     * Автоскидка, примененная к строке
     *
     * @var float
     */
    protected $autoDiscount = 0;

    /**
     * Ручная скидка, примененная к строке
     *
     * @var float
     */
    protected $manualDiscount = 0;

    /**
     * Запрет применения бонусов к этой строке
     *
     * @var bool
     */
    protected $noApplyBonuses = false;

    /**
     * Запрет начисления бонусов за эту строку
     *
     * @var bool
     */
    protected $noCollectBonuses = false;

    /**
     * Запрет применения скидки по промокоду к этой строке
     *
     * @var bool
     */
    protected $noPromocode = false;

    /**
     * Запрет применения акций к этой строке
     *
     * @var bool
     */
    protected $noOffer = false;

    /**
     * Величина максимальной скидки для этой строки
     *
     * @var float
     */
    protected $maxDiscount;

    /**
     * Произвольный идентификатор строки, сервером не используется
     *
     * @return string
     */
    public function getId()
    {
        return $this->id;
    }

    /**
     * Произвольный идентификатор строки, сервером не используется
     *
     * @param string $id
     *
     * @return self
     */
    public function setId($id)
    {
        $this->id = $id;
        return $this;
    }

    /**
     * Данные о товаре/услуге
     *
     * @return CalculationQueryRowProduct
     */
    public function getProduct()
    {
        return $this->product;
    }

    /**
     * Данные о товаре/услуге
     *
     * @param CalculationQueryRowProduct $product
     *
     * @return self
     */
    public function setProduct(CalculationQueryRowProduct $product)
    {
        $this->product = $product;
        return $this;
    }

    /**
     * Количество
     *
     * @return float
     */
    public function getQty()
    {
        return $this->qty;
    }

    /**
     * Количество
     *
     * @param float $qty
     *
     * @return self
     */
    public function setQty($qty)
    {
        $this->qty = $qty;
        return $this;
    }

    /**
     * Автоскидка, примененная к строке
     *
     * @return float
     */
    public function getAutoDiscount()
    {
        return $this->autoDiscount;
    }

    /**
     * Автоскидка, примененная к строке
     *
     * @param float $autoDiscount
     *
     * @return self
     */
    public function setAutoDiscount($autoDiscount)
    {
        $this->autoDiscount = $autoDiscount;
        return $this;
    }

    /**
     * Ручная скидка, примененная к строке
     *
     * @return float
     */
    public function getManualDiscount()
    {
        return $this->manualDiscount;
    }

    /**
     * Ручная скидка, примененная к строке
     *
     * @param float $manualDiscount
     *
     * @return self
     */
    public function setManualDiscount($manualDiscount)
    {
        $this->manualDiscount = $manualDiscount;
        return $this;
    }

    /**
     * Запрет применения бонусов к этой строке
     *
     * @return bool
     */
    public function getNoApplyBonuses()
    {
        return $this->noApplyBonuses;
    }

    /**
     * Запрет применения бонусов к этой строке
     *
     * @param bool $noApplyBonuses
     *
     * @return self
     */
    public function setNoApplyBonuses($noApplyBonuses)
    {
        $this->noApplyBonuses = $noApplyBonuses;
        return $this;
    }

    /**
     * Запрет начисления бонусов за эту строку
     *
     * @return bool
     */
    public function getNoCollectBonuses()
    {
        return $this->noCollectBonuses;
    }

    /**
     * Запрет начисления бонусов за эту строку
     *
     * @param bool $noCollectBonuses
     *
     * @return self
     */
    public function setNoCollectBonuses($noCollectBonuses)
    {
        $this->noCollectBonuses = $noCollectBonuses;
        return $this;
    }

    /**
     * Запрет применения скидки по промокоду к этой строке
     *
     * @return bool
     */
    public function getNoPromocode()
    {
        return $this->noPromocode;
    }

    /**
     * Запрет применения скидки по промокоду к этой строке
     *
     * @param bool $noPromocode
     *
     * @return self
     */
    public function setNoPromocode($noPromocode)
    {
        $this->noPromocode = $noPromocode;
        return $this;
    }

    /**
     * Запрет применения акций к этой строке
     *
     * @return bool
     */
    public function getNoOffer()
    {
        return $this->noOffer;
    }

    /**
     * Запрет применения акций к этой строке
     *
     * @param bool $noOffer
     *
     * @return self
     */
    public function setNoOffer($noOffer)
    {
        $this->noOffer = $noOffer;
        return $this;
    }

    /**
     * Величина максимальной скидки для этой строки
     *
     * @return float
     */
    public function getMaxDiscount()
    {
        return $this->maxDiscount;
    }

    /**
     * Величина максимальной скидки для этой строки
     *
     * @param float $maxDiscount
     *
     * @return self
     */
    public function setMaxDiscount($maxDiscount)
    {
        $this->maxDiscount = $maxDiscount;
        return $this;
    }
}