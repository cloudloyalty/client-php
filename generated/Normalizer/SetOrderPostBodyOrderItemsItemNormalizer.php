<?php

declare(strict_types=1);

/*
 * This file has been auto generated by Jane,
 *
 * Do no edit it directly.
 */

namespace CloudLoyalty\Api\Normalizer;

use Symfony\Component\Serializer\Exception\InvalidArgumentException;
use Symfony\Component\Serializer\Normalizer\DenormalizerAwareInterface;
use Symfony\Component\Serializer\Normalizer\DenormalizerAwareTrait;
use Symfony\Component\Serializer\Normalizer\DenormalizerInterface;
use Symfony\Component\Serializer\Normalizer\NormalizerAwareInterface;
use Symfony\Component\Serializer\Normalizer\NormalizerAwareTrait;
use Symfony\Component\Serializer\Normalizer\NormalizerInterface;

class SetOrderPostBodyOrderItemsItemNormalizer implements DenormalizerInterface, NormalizerInterface, DenormalizerAwareInterface, NormalizerAwareInterface
{
    use DenormalizerAwareTrait;
    use NormalizerAwareTrait;

    public function supportsDenormalization($data, $type, $format = null)
    {
        return $type === 'CloudLoyalty\\Api\\Model\\SetOrderPostBodyOrderItemsItem';
    }

    public function supportsNormalization($data, $format = null)
    {
        return is_object($data) && get_class($data) === 'CloudLoyalty\\Api\\Model\\SetOrderPostBodyOrderItemsItem';
    }

    public function denormalize($data, $class, $format = null, array $context = [])
    {
        if (!is_object($data)) {
            throw new InvalidArgumentException();
        }
        $object = new \CloudLoyalty\Api\Model\SetOrderPostBodyOrderItemsItem();
        if (property_exists($data, 'sku')) {
            $object->setSku($data->{'sku'});
        }
        if (property_exists($data, 'itemTitle')) {
            $object->setItemTitle($data->{'itemTitle'});
        }
        if (property_exists($data, 'itemCount')) {
            $object->setItemCount($data->{'itemCount'});
        }
        if (property_exists($data, 'buyingPrice')) {
            $object->setBuyingPrice($data->{'buyingPrice'});
        }
        if (property_exists($data, 'price')) {
            $object->setPrice($data->{'price'});
        }
        if (property_exists($data, 'amount')) {
            $object->setAmount($data->{'amount'});
        }

        return $object;
    }

    public function normalize($object, $format = null, array $context = [])
    {
        $data = new \stdClass();
        if (null !== $object->getSku()) {
            $data->{'sku'} = $object->getSku();
        }
        if (null !== $object->getItemTitle()) {
            $data->{'itemTitle'} = $object->getItemTitle();
        }
        if (null !== $object->getItemCount()) {
            $data->{'itemCount'} = $object->getItemCount();
        }
        if (null !== $object->getBuyingPrice()) {
            $data->{'buyingPrice'} = $object->getBuyingPrice();
        }
        if (null !== $object->getPrice()) {
            $data->{'price'} = $object->getPrice();
        }
        if (null !== $object->getAmount()) {
            $data->{'amount'} = $object->getAmount();
        }

        return $data;
    }
}
