<?php

declare(strict_types=1);

/*
 * This file has been auto generated by Jane,
 *
 * Do no edit it directly.
 */

namespace CloudLoyalty\Api\Model;

class CalculationQueryRowProduct
{
    /**
     * ID номенклатуры во внешней системе.
     *
     * @var string
     */
    protected $externalId;

    /**
     * Код номенклатуры или артикул.
     *
     * @var string
     */
    protected $sku;

    /**
     * Наименование товара или услуги.
     *
     * @var string
     */
    protected $title;

    /**
     * Категория товара или услуги.
     *
     * @var string
     */
    protected $category;

    /**
     * ID категории во внешней системе.
     *
     * @var string
     */
    protected $categoryExternalId;

    /**
     * Закупочная цена единицы товара.
     *
     * @var float
     */
    protected $buyingPrice;

    /**
     * Обычная цена единицы товара или услуги.
     *
     * @var float
     */
    protected $blackPrice;

    /**
     * Новая цена единицы товара или услуги.
     *
     * @var float
     */
    protected $redPrice;

    /**
     * Минимальная цена единицы товара или услуги.
     *
     * @var float
     */
    protected $minPrice = 0;

    /**
     * ID номенклатуры во внешней системе.
     */
    public function getExternalId(): string
    {
        return $this->externalId;
    }

    /**
     * ID номенклатуры во внешней системе.
     */
    public function setExternalId(string $externalId): self
    {
        $this->externalId = $externalId;

        return $this;
    }

    /**
     * Код номенклатуры или артикул.
     */
    public function getSku(): string
    {
        return $this->sku;
    }

    /**
     * Код номенклатуры или артикул.
     */
    public function setSku(string $sku): self
    {
        $this->sku = $sku;

        return $this;
    }

    /**
     * Наименование товара или услуги.
     */
    public function getTitle(): string
    {
        return $this->title;
    }

    /**
     * Наименование товара или услуги.
     */
    public function setTitle(string $title): self
    {
        $this->title = $title;

        return $this;
    }

    /**
     * Категория товара или услуги.
     */
    public function getCategory(): string
    {
        return $this->category;
    }

    /**
     * Категория товара или услуги.
     */
    public function setCategory(string $category): self
    {
        $this->category = $category;

        return $this;
    }

    /**
     * ID категории во внешней системе.
     */
    public function getCategoryExternalId(): string
    {
        return $this->categoryExternalId;
    }

    /**
     * ID категории во внешней системе.
     */
    public function setCategoryExternalId(string $categoryExternalId): self
    {
        $this->categoryExternalId = $categoryExternalId;

        return $this;
    }

    /**
     * Закупочная цена единицы товара.
     */
    public function getBuyingPrice(): float
    {
        return $this->buyingPrice;
    }

    /**
     * Закупочная цена единицы товара.
     */
    public function setBuyingPrice(float $buyingPrice): self
    {
        $this->buyingPrice = $buyingPrice;

        return $this;
    }

    /**
     * Обычная цена единицы товара или услуги.
     */
    public function getBlackPrice(): float
    {
        return $this->blackPrice;
    }

    /**
     * Обычная цена единицы товара или услуги.
     */
    public function setBlackPrice(float $blackPrice): self
    {
        $this->blackPrice = $blackPrice;

        return $this;
    }

    /**
     * Новая цена единицы товара или услуги.
     */
    public function getRedPrice(): float
    {
        return $this->redPrice;
    }

    /**
     * Новая цена единицы товара или услуги.
     */
    public function setRedPrice(float $redPrice): self
    {
        $this->redPrice = $redPrice;

        return $this;
    }

    /**
     * Минимальная цена единицы товара или услуги.
     */
    public function getMinPrice(): float
    {
        return $this->minPrice;
    }

    /**
     * Минимальная цена единицы товара или услуги.
     */
    public function setMinPrice(float $minPrice): self
    {
        $this->minPrice = $minPrice;

        return $this;
    }
}
