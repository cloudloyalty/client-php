<?php

declare(strict_types=1);

/*
 * This file has been auto generated by Jane,
 *
 * Do no edit it directly.
 */

namespace CloudLoyalty\Api\Model;

class SetOrderPostBodyOrder
{
    /**
     * Идентификатор заказа.
     *
     * @var string
     */
    protected $id;

    /**
     * Дата и время создания заказа.
     *
     * @var \DateTime
     */
    protected $executedAt;

    /**
     * Код магазина, в котором осуществляется операция.
     *
     * @var string
     */
    protected $shopCode;

    /**
     * Полное название магазина, в котором осуществляется операция.
     *
     * @var string
     */
    protected $shopName;

    /**
     * Общая сумма заказа.
     *
     * @var float
     */
    protected $totalAmount;

    /**
     * @var SetOrderPostBodyOrderLoyalty
     */
    protected $loyalty;

    /**
     * Промокод.
     *
     * @var string
     */
    protected $promocode;

    /**
     * Список позиций заказа.
     *
     * @var SetOrderPostBodyOrderItemsItem[]
     */
    protected $items;

    /**
     * Идентификатор заказа.
     */
    public function getId(): string
    {
        return $this->id;
    }

    /**
     * Идентификатор заказа.
     */
    public function setId(string $id): self
    {
        $this->id = $id;

        return $this;
    }

    /**
     * Дата и время создания заказа.
     */
    public function getExecutedAt(): \DateTime
    {
        return $this->executedAt;
    }

    /**
     * Дата и время создания заказа.
     */
    public function setExecutedAt(\DateTime $executedAt): self
    {
        $this->executedAt = $executedAt;

        return $this;
    }

    /**
     * Код магазина, в котором осуществляется операция.
     */
    public function getShopCode(): string
    {
        return $this->shopCode;
    }

    /**
     * Код магазина, в котором осуществляется операция.
     */
    public function setShopCode(string $shopCode): self
    {
        $this->shopCode = $shopCode;

        return $this;
    }

    /**
     * Полное название магазина, в котором осуществляется операция.
     */
    public function getShopName(): string
    {
        return $this->shopName;
    }

    /**
     * Полное название магазина, в котором осуществляется операция.
     */
    public function setShopName(string $shopName): self
    {
        $this->shopName = $shopName;

        return $this;
    }

    /**
     * Общая сумма заказа.
     */
    public function getTotalAmount(): float
    {
        return $this->totalAmount;
    }

    /**
     * Общая сумма заказа.
     */
    public function setTotalAmount(float $totalAmount): self
    {
        $this->totalAmount = $totalAmount;

        return $this;
    }

    public function getLoyalty(): SetOrderPostBodyOrderLoyalty
    {
        return $this->loyalty;
    }

    public function setLoyalty(SetOrderPostBodyOrderLoyalty $loyalty): self
    {
        $this->loyalty = $loyalty;

        return $this;
    }

    /**
     * Промокод.
     */
    public function getPromocode(): string
    {
        return $this->promocode;
    }

    /**
     * Промокод.
     */
    public function setPromocode(string $promocode): self
    {
        $this->promocode = $promocode;

        return $this;
    }

    /**
     * Список позиций заказа.
     *
     * @return SetOrderPostBodyOrderItemsItem[]
     */
    public function getItems(): array
    {
        return $this->items;
    }

    /**
     * Список позиций заказа.
     *
     * @param SetOrderPostBodyOrderItemsItem[] $items
     */
    public function setItems(array $items): self
    {
        $this->items = $items;

        return $this;
    }
}
