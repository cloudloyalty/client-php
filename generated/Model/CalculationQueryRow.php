<?php

declare(strict_types=1);

/*
 * This file has been auto generated by Jane,
 *
 * Do no edit it directly.
 */

namespace CloudLoyalty\Api\Model;

class CalculationQueryRow
{
    /**
     * Произвольный идентификатор строки, сервером не используется.
     *
     * @var string
     */
    protected $id;

    /**
     * Данные о товаре/услуге.
     *
     * @var CalculationQueryRowProduct
     */
    protected $product;

    /**
     * Количество.
     *
     * @var float
     */
    protected $qty;

    /**
     * Автоскидка, примененная к строке.
     *
     * @var float
     */
    protected $autoDiscount = 0;

    /**
     * Ручная скидка, примененная к строке.
     *
     * @var float
     */
    protected $manualDiscount = 0;

    /**
     * Запрет применения бонусов к этой строке.
     *
     * @var bool
     */
    protected $noApplyBonuses = false;

    /**
     * Запрет начисления бонусов за эту строку.
     *
     * @var bool
     */
    protected $noCollectBonuses = false;

    /**
     * Запрет применения скидки по промокоду к этой строке.
     *
     * @var bool
     */
    protected $noPromocode = false;

    /**
     * Запрет применения акций к этой строке.
     *
     * @var bool
     */
    protected $noOffer = false;

    /**
     * Величина максимальной скидки для этой строки.
     *
     * @var float
     */
    protected $maxDiscount;

    /**
     * Произвольный идентификатор строки, сервером не используется.
     */
    public function getId(): string
    {
        return $this->id;
    }

    /**
     * Произвольный идентификатор строки, сервером не используется.
     */
    public function setId(string $id): self
    {
        $this->id = $id;

        return $this;
    }

    /**
     * Данные о товаре/услуге.
     */
    public function getProduct(): CalculationQueryRowProduct
    {
        return $this->product;
    }

    /**
     * Данные о товаре/услуге.
     */
    public function setProduct(CalculationQueryRowProduct $product): self
    {
        $this->product = $product;

        return $this;
    }

    /**
     * Количество.
     */
    public function getQty(): float
    {
        return $this->qty;
    }

    /**
     * Количество.
     */
    public function setQty(float $qty): self
    {
        $this->qty = $qty;

        return $this;
    }

    /**
     * Автоскидка, примененная к строке.
     */
    public function getAutoDiscount(): float
    {
        return $this->autoDiscount;
    }

    /**
     * Автоскидка, примененная к строке.
     */
    public function setAutoDiscount(float $autoDiscount): self
    {
        $this->autoDiscount = $autoDiscount;

        return $this;
    }

    /**
     * Ручная скидка, примененная к строке.
     */
    public function getManualDiscount(): float
    {
        return $this->manualDiscount;
    }

    /**
     * Ручная скидка, примененная к строке.
     */
    public function setManualDiscount(float $manualDiscount): self
    {
        $this->manualDiscount = $manualDiscount;

        return $this;
    }

    /**
     * Запрет применения бонусов к этой строке.
     */
    public function getNoApplyBonuses(): bool
    {
        return $this->noApplyBonuses;
    }

    /**
     * Запрет применения бонусов к этой строке.
     */
    public function setNoApplyBonuses(bool $noApplyBonuses): self
    {
        $this->noApplyBonuses = $noApplyBonuses;

        return $this;
    }

    /**
     * Запрет начисления бонусов за эту строку.
     */
    public function getNoCollectBonuses(): bool
    {
        return $this->noCollectBonuses;
    }

    /**
     * Запрет начисления бонусов за эту строку.
     */
    public function setNoCollectBonuses(bool $noCollectBonuses): self
    {
        $this->noCollectBonuses = $noCollectBonuses;

        return $this;
    }

    /**
     * Запрет применения скидки по промокоду к этой строке.
     */
    public function getNoPromocode(): bool
    {
        return $this->noPromocode;
    }

    /**
     * Запрет применения скидки по промокоду к этой строке.
     */
    public function setNoPromocode(bool $noPromocode): self
    {
        $this->noPromocode = $noPromocode;

        return $this;
    }

    /**
     * Запрет применения акций к этой строке.
     */
    public function getNoOffer(): bool
    {
        return $this->noOffer;
    }

    /**
     * Запрет применения акций к этой строке.
     */
    public function setNoOffer(bool $noOffer): self
    {
        $this->noOffer = $noOffer;

        return $this;
    }

    /**
     * Величина максимальной скидки для этой строки.
     */
    public function getMaxDiscount(): float
    {
        return $this->maxDiscount;
    }

    /**
     * Величина максимальной скидки для этой строки.
     */
    public function setMaxDiscount(float $maxDiscount): self
    {
        $this->maxDiscount = $maxDiscount;

        return $this;
    }
}
