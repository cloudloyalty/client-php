<?php

declare(strict_types=1);

/*
 * This file has been auto generated by Jane,
 *
 * Do no edit it directly.
 */

namespace CloudLoyalty\Api\Model;

class ClientInfo
{
    /**
     * Баланс доступных бонусов.
     *
     * @var int
     */
    protected $bonuses;

    /**
     * Баланс ожидаемых бонусов.
     *
     * @var int
     */
    protected $pendingBonuses;

    /**
     * Номер телефона клиента.
     *
     * @var string
     */
    protected $phoneNumber;

    /**
     * Адрес электронной почты клиента.
     *
     * @var string
     */
    protected $email;

    /**
     * Фамилия.
     *
     * @var string
     */
    protected $surname;

    /**
     * Имя.
     *
     * @var string
     */
    protected $name;

    /**
     * Отчество.
     *
     * @var string
     */
    protected $patronymicName;

    /**
     * Фамилия, имя и отчество одной строкой.
     *
     * @var string
     */
    protected $fullName;

    /**
     * Пол.
     *
     * @var int
     */
    protected $gender;

    /**
     * Дата рождения.
     *
     * @var \DateTime
     */
    protected $birthdate;

    /**
     * Номер бонусной карты.
     *
     * @var int
     */
    protected $card;

    /**
     * Номер бонусной карты в виде строки.
     *
     * @var string
     */
    protected $cardString;

    /**
     * Флаг, подписан ли клиент на маркетинговые рассылки по электронной почте.
     *
     * @var bool
     */
    protected $isEmailSubscribed;

    /**
     * Флаг, подписан ли клиент на маркетинговые рассылки по SMS или Viber.
     *
     * @var bool
     */
    protected $isPhoneSubscribed;

    /**
     * Внешний идентификатор клиента.
     *
     * @var string
     */
    protected $externalId;

    /**
     * Дополнительные параметры клиента.
     *
     * @var mixed[]
     */
    protected $extraFields;

    /**
     * Уровень клиента в программе лояльности.
     *
     * @var int
     */
    protected $level;

    /**
     * @var ClientInfoChildrenItem[]
     */
    protected $children;

    /**
     * Баланс доступных бонусов.
     */
    public function getBonuses(): int
    {
        return $this->bonuses;
    }

    /**
     * Баланс доступных бонусов.
     */
    public function setBonuses(int $bonuses): self
    {
        $this->bonuses = $bonuses;

        return $this;
    }

    /**
     * Баланс ожидаемых бонусов.
     */
    public function getPendingBonuses(): int
    {
        return $this->pendingBonuses;
    }

    /**
     * Баланс ожидаемых бонусов.
     */
    public function setPendingBonuses(int $pendingBonuses): self
    {
        $this->pendingBonuses = $pendingBonuses;

        return $this;
    }

    /**
     * Номер телефона клиента.
     */
    public function getPhoneNumber(): string
    {
        return $this->phoneNumber;
    }

    /**
     * Номер телефона клиента.
     */
    public function setPhoneNumber(string $phoneNumber): self
    {
        $this->phoneNumber = $phoneNumber;

        return $this;
    }

    /**
     * Адрес электронной почты клиента.
     */
    public function getEmail(): string
    {
        return $this->email;
    }

    /**
     * Адрес электронной почты клиента.
     */
    public function setEmail(string $email): self
    {
        $this->email = $email;

        return $this;
    }

    /**
     * Фамилия.
     */
    public function getSurname(): string
    {
        return $this->surname;
    }

    /**
     * Фамилия.
     */
    public function setSurname(string $surname): self
    {
        $this->surname = $surname;

        return $this;
    }

    /**
     * Имя.
     */
    public function getName(): string
    {
        return $this->name;
    }

    /**
     * Имя.
     */
    public function setName(string $name): self
    {
        $this->name = $name;

        return $this;
    }

    /**
     * Отчество.
     */
    public function getPatronymicName(): string
    {
        return $this->patronymicName;
    }

    /**
     * Отчество.
     */
    public function setPatronymicName(string $patronymicName): self
    {
        $this->patronymicName = $patronymicName;

        return $this;
    }

    /**
     * Фамилия, имя и отчество одной строкой.
     */
    public function getFullName(): string
    {
        return $this->fullName;
    }

    /**
     * Фамилия, имя и отчество одной строкой.
     */
    public function setFullName(string $fullName): self
    {
        $this->fullName = $fullName;

        return $this;
    }

    /**
     * Пол.
     */
    public function getGender(): int
    {
        return $this->gender;
    }

    /**
     * Пол.
     */
    public function setGender(int $gender): self
    {
        $this->gender = $gender;

        return $this;
    }

    /**
     * Дата рождения.
     */
    public function getBirthdate(): \DateTime
    {
        return $this->birthdate;
    }

    /**
     * Дата рождения.
     */
    public function setBirthdate(\DateTime $birthdate): self
    {
        $this->birthdate = $birthdate;

        return $this;
    }

    /**
     * Номер бонусной карты.
     */
    public function getCard(): int
    {
        return $this->card;
    }

    /**
     * Номер бонусной карты.
     */
    public function setCard(int $card): self
    {
        $this->card = $card;

        return $this;
    }

    /**
     * Номер бонусной карты в виде строки.
     */
    public function getCardString(): string
    {
        return $this->cardString;
    }

    /**
     * Номер бонусной карты в виде строки.
     */
    public function setCardString(string $cardString): self
    {
        $this->cardString = $cardString;

        return $this;
    }

    /**
     * Флаг, подписан ли клиент на маркетинговые рассылки по электронной почте.
     */
    public function getIsEmailSubscribed(): bool
    {
        return $this->isEmailSubscribed;
    }

    /**
     * Флаг, подписан ли клиент на маркетинговые рассылки по электронной почте.
     */
    public function setIsEmailSubscribed(bool $isEmailSubscribed): self
    {
        $this->isEmailSubscribed = $isEmailSubscribed;

        return $this;
    }

    /**
     * Флаг, подписан ли клиент на маркетинговые рассылки по SMS или Viber.
     */
    public function getIsPhoneSubscribed(): bool
    {
        return $this->isPhoneSubscribed;
    }

    /**
     * Флаг, подписан ли клиент на маркетинговые рассылки по SMS или Viber.
     */
    public function setIsPhoneSubscribed(bool $isPhoneSubscribed): self
    {
        $this->isPhoneSubscribed = $isPhoneSubscribed;

        return $this;
    }

    /**
     * Внешний идентификатор клиента.
     */
    public function getExternalId(): string
    {
        return $this->externalId;
    }

    /**
     * Внешний идентификатор клиента.
     */
    public function setExternalId(string $externalId): self
    {
        $this->externalId = $externalId;

        return $this;
    }

    /**
     * Дополнительные параметры клиента.
     *
     * @return mixed[]
     */
    public function getExtraFields(): \ArrayObject
    {
        return $this->extraFields;
    }

    /**
     * Дополнительные параметры клиента.
     *
     * @param mixed[] $extraFields
     */
    public function setExtraFields(\ArrayObject $extraFields): self
    {
        $this->extraFields = $extraFields;

        return $this;
    }

    /**
     * Уровень клиента в программе лояльности.
     */
    public function getLevel(): int
    {
        return $this->level;
    }

    /**
     * Уровень клиента в программе лояльности.
     */
    public function setLevel(int $level): self
    {
        $this->level = $level;

        return $this;
    }

    /**
     * @return ClientInfoChildrenItem[]
     */
    public function getChildren(): array
    {
        return $this->children;
    }

    /**
     * @param ClientInfoChildrenItem[] $children
     */
    public function setChildren(array $children): self
    {
        $this->children = $children;

        return $this;
    }
}
